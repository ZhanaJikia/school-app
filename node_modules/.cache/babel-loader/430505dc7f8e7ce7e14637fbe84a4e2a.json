{"ast":null,"code":"import _slicedToArray from \"/home/zhana/Desktop/school-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef } from 'react';\nimport nodeBuilder from '../services/nodeBuilder';\n\nconst useForm = () => {\n  const nodeRefs = useRef([]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        submitted = _useState2[0],\n        setSubmitted = _useState2[1];\n\n  const setNodeRef = nodeRef => nodeRefs.current.push(nodeRef);\n\n  const getNodeRefs = () => nodeRefs.current.filter((element, index, array) => array.indexOf(element) == index && element !== null);\n\n  const getNodeRefsData = () => nodeBuilder(getNodeRefs());\n\n  const getSubmitted = () => submitted;\n\n  return {\n    setNodeRef,\n    getNodeRefs,\n    getNodeRefsData,\n    setSubmitted,\n    getSubmitted\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/home/zhana/Desktop/school-app/src/react-forms.js/hooks/useForm.js"],"names":["useState","useRef","nodeBuilder","useForm","nodeRefs","submitted","setSubmitted","setNodeRef","nodeRef","current","push","getNodeRefs","filter","element","index","array","indexOf","getNodeRefsData","getSubmitted"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGH,MAAM,CAAC,EAAD,CAAvB;;AADoB,oBAGcD,QAAQ,CAAC,KAAD,CAHtB;AAAA;AAAA,QAGbK,SAHa;AAAA,QAGFC,YAHE;;AAKpB,QAAMC,UAAU,GAAGC,OAAO,IAAIJ,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,CAAsBF,OAAtB,CAA9B;;AAEA,QAAMG,WAAW,GAAG,MAClBP,QAAQ,CAACK,OAAT,CAAiBG,MAAjB,CACE,CAACC,OAAD,EAAUC,KAAV,EAAiBC,KAAjB,KACEA,KAAK,CAACC,OAAN,CAAcH,OAAd,KAA0BC,KAA1B,IAAmCD,OAAO,KAAK,IAFnD,CADF;;AAMA,QAAMI,eAAe,GAAG,MAAMf,WAAW,CAACS,WAAW,EAAZ,CAAzC;;AAEA,QAAMO,YAAY,GAAG,MAAMb,SAA3B;;AAEA,SAAO;AACLE,IAAAA,UADK;AAELI,IAAAA,WAFK;AAGLM,IAAAA,eAHK;AAILX,IAAAA,YAJK;AAKLY,IAAAA;AALK,GAAP;AAOD,CAxBD;;AA0BA,eAAef,OAAf","sourcesContent":["import { useState, useRef } from 'react'\n\nimport nodeBuilder from '../services/nodeBuilder'\n\nconst useForm = () => {\n  const nodeRefs = useRef([])\n\n  const [submitted, setSubmitted] = useState(false)\n\n  const setNodeRef = nodeRef => nodeRefs.current.push(nodeRef)\n\n  const getNodeRefs = () =>\n    nodeRefs.current.filter(\n      (element, index, array) =>\n        array.indexOf(element) == index && element !== null\n    )\n\n  const getNodeRefsData = () => nodeBuilder(getNodeRefs())\n\n  const getSubmitted = () => submitted\n\n  return {\n    setNodeRef,\n    getNodeRefs,\n    getNodeRefsData,\n    setSubmitted,\n    getSubmitted\n  }\n}\n\nexport default useForm\n"]},"metadata":{},"sourceType":"module"}