{"ast":null,"code":"import _defineProperty from \"/home/zhana/Desktop/school-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport validator from '../services/validator';\n\nconst useValidator = (getNodeRefs, getSubmitted, setValidator, errorClass) => {\n  const validate = () => validator(getNodeRefs(), errorClass);\n\n  const listenChange = () => {\n    if (!getSubmitted()) return;\n    setValidator(_objectSpread({}, validate(), {\n      submitted: getSubmitted()\n    }));\n  };\n\n  return {\n    listenChange,\n    validate\n  };\n};\n\nexport default useValidator;","map":{"version":3,"sources":["/home/zhana/Desktop/school-app/src/react-forms.js/hooks/useValidator.js"],"names":["validator","useValidator","getNodeRefs","getSubmitted","setValidator","errorClass","validate","listenChange","submitted"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,YAAY,GAAG,CAACC,WAAD,EAAcC,YAAd,EAA4BC,YAA5B,EAA0CC,UAA1C,KAAyD;AAC5E,QAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACE,WAAW,EAAZ,EAAgBG,UAAhB,CAAhC;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAI,CAACJ,YAAY,EAAjB,EAAqB;AACrBC,IAAAA,YAAY,mBAAME,QAAQ,EAAd;AAAkBE,MAAAA,SAAS,EAAEL,YAAY;AAAzC,OAAZ;AACD,GAHD;;AAKA,SAAO;AAAEI,IAAAA,YAAF;AAAgBD,IAAAA;AAAhB,GAAP;AACD,CATD;;AAWA,eAAeL,YAAf","sourcesContent":["import validator from '../services/validator'\n\nconst useValidator = (getNodeRefs, getSubmitted, setValidator, errorClass) => {\n  const validate = () => validator(getNodeRefs(), errorClass)\n\n  const listenChange = () => {\n    if (!getSubmitted()) return\n    setValidator({ ...validate(), submitted: getSubmitted() })\n  }\n\n  return { listenChange, validate }\n}\n\nexport default useValidator\n"]},"metadata":{},"sourceType":"module"}