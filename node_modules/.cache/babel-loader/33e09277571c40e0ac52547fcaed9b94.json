{"ast":null,"code":"var _jsxFileName = \"/home/zhana/Desktop/school-app/src/components/schoolForm/validatedSchoolForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../schoolForm/form.css\";\nimport { v4 as uuid } from 'uuid';\n\nconst ValidatedSchoolForm = props => React.createElement(Formik, {\n  initialValues: {\n    schoolName: \"\",\n    address: \"\",\n    students: []\n  },\n  onSubmit: (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    setTimeout(() => {\n      values.id = uuid();\n      values.students = [];\n      props.handleAdd(values); // Giving parrent school Data\n\n      setSubmitting(false);\n      resetForm();\n    }, 500);\n  },\n  validationSchema: Yup.object().shape({\n    schoolName: Yup.string().required(\"Required\"),\n    address: Yup.string().required(\"No address provided\").matches(/^[a-zA-Z 0-9]*$/, \"No special character allowed\")\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        isSubmitting = props.isSubmitting,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"schoolName\",\n    type: \"text\",\n    placeholder: \"Type School Name...\",\n    value: values.schoolName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.schoolName && touched.schoolName && \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), errors.schoolName && touched.schoolName && React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, errors.schoolName), React.createElement(\"input\", {\n    name: \"address\",\n    type: \"text\",\n    placeholder: \"Type School Address...\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.address && touched.address && \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), errors.address && touched.address && React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, errors.address), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Add\"));\n});\n\nexport default ValidatedSchoolForm;","map":{"version":3,"sources":["/home/zhana/Desktop/school-app/src/components/schoolForm/validatedSchoolForm.js"],"names":["React","Formik","Yup","v4","uuid","ValidatedSchoolForm","props","schoolName","address","students","values","setSubmitting","resetForm","setTimeout","id","handleAdd","object","shape","string","required","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../schoolForm/form.css\"\nimport {v4 as uuid} from 'uuid';\n\nconst ValidatedSchoolForm = props => (\n  <Formik\n    initialValues={{\n      schoolName: \"\",\n      address: \"\",\n      students: []\n    }}\n\n    onSubmit={(values,  { setSubmitting, resetForm }) => {\n      setTimeout(() => {\n        values.id=uuid();\n        values.students = [];\n        props.handleAdd(values); // Giving parrent school Data\n        setSubmitting(false);\n        resetForm()\n      }, 500);\n    }}\n\n    validationSchema={Yup.object().shape({\n      schoolName: Yup.string()\n      .required(\"Required\"),\n\n      address: Yup.string()\n        .required(\"No address provided\")\n        .matches(/^[a-zA-Z 0-9]*$/, \"No special character allowed\"),\n    })}>\n\n    {props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n\n      return (\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"schoolName\"\n            type=\"text\"\n            placeholder=\"Type School Name...\"\n            value={values.schoolName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.schoolName && touched.schoolName && \"error\"}\n          />\n          {errors.schoolName && touched.schoolName && (\n            <div className=\"input-feedback\">{errors.schoolName}</div>\n          )}\n\n          <input\n            name=\"address\"\n            type=\"text\"\n            placeholder=\"Type School Address...\"\n            value={values.address}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.address && touched.address && \"error\"}\n          />\n          {errors.address && touched.address && (\n            <div className=\"input-feedback\">{errors.address}</div>\n          )}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Add\n          </button>\n        </form>\n      );\n    }}\n  </Formik>\n);\n\nexport default ValidatedSchoolForm;\n"]},"metadata":{},"sourceType":"module"}