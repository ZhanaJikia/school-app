{"ast":null,"code":"import _defineProperty from \"/home/zhana/Desktop/school-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/zhana/Desktop/school-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/zhana/Desktop/school-app/src/components/studentForm/StudentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport MaterialModal from '../modal';\n\nconst StudentForm = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValue = _useState2[1];\n\n  const handleChange = (key, val) => {\n    setValue(prevState => _objectSpread({}, prevState, {\n      [key]: val\n    }));\n  };\n\n  const checkfnlname = input => {\n    //here you can perform input check\n    curr = document.getElementById(input).value;\n\n    if (curr.length > 0) {\n      updateCSSClass(input, 1);\n      return true;\n    } else {\n      updateCSSClass(input, 0);\n      return false;\n    } // to check button validations\n\n\n    formvalid();\n  };\n\n  const handleSubmit = () => {\n    if (checkfnlname) {\n      props.setStudents(values, props.id);\n      props.setIsOpen(false);\n    } else {\n      console.log('need info');\n    }\n  };\n\n  return React.createElement(MaterialModal, {\n    setIsOpen: props.setIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-style-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"New Student\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fullName\",\n    required: true,\n    className: \"field-style field-full align-none\",\n    placeholder: \"Full Name...\",\n    onChange: e => handleChange(e.target.name, e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    className: \"field-style field-full align-none\",\n    placeholder: \"Email...\",\n    onChange: e => handleChange(e.target.name, e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    min: \"6\",\n    max: \"19\",\n    required: true,\n    name: \"age\",\n    className: \"field-style field-full align-none\",\n    placeholder: \"Student's Age...\",\n    onChange: e => handleChange(e.target.name, e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => handleSubmit(),\n    className: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default StudentForm;","map":{"version":3,"sources":["/home/zhana/Desktop/school-app/src/components/studentForm/StudentForm.js"],"names":["React","useState","MaterialModal","StudentForm","props","values","setValue","handleChange","key","val","prevState","checkfnlname","input","curr","document","getElementById","value","length","updateCSSClass","formvalid","handleSubmit","setStudents","id","setIsOpen","console","log","e","target","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport MaterialModal from '../modal'\n\n\nconst StudentForm = (props) => {\n\n  const [values, setValue] = useState({})\n\n  const handleChange = (key, val) => {\n    setValue(prevState => ({ ...prevState, [key]: val }))\n  }\n\n\n  const checkfnlname = (input) => {\n\n    //here you can perform input check\n    curr = document.getElementById(input).value;\n    if ( curr.length > 0) {\n        updateCSSClass(input, 1);\n        return true;\n    }\n    else {\n        updateCSSClass(input, 0);\n        return false;\n    }\n    // to check button validations\n    formvalid();\n}\n  const handleSubmit = () => {\n    if(checkfnlname){\n      props.setStudents(values, props.id)\n      props.setIsOpen(false)\n    } else {\n      console.log('need info')\n    }\n  }\n\n  return (\n    <MaterialModal setIsOpen={props.setIsOpen}>\n      <form className=\"form-style-9\">\n        <h3>New Student</h3>\n            <input\n              type=\"text\" name=\"fullName\" required\n              className=\"field-style field-full align-none\"\n              placeholder=\"Full Name...\"\n              onChange={e => handleChange(e.target.name, e.target.value)}/>\n            <input\n              type=\"email\" name=\"email\" required\n              className=\"field-style field-full align-none\"\n              placeholder=\"Email...\"\n              onChange={e => handleChange(e.target.name, e.target.value)}/>\n            <input\n              type=\"number\" min=\"6\" max=\"19\" required\n              name=\"age\" className=\"field-style field-full align-none\"\n              placeholder=\"Student's Age...\"\n              onChange={e => handleChange(e.target.name, e.target.value)}/>\n            <button onClick={() => handleSubmit()} className=\"submit\" value=\"Submit\" >Submit</button>\n      </form>\n    </MaterialModal>\n  )\n}\n\n\nexport default StudentForm"]},"metadata":{},"sourceType":"module"}