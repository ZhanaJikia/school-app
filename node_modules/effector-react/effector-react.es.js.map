{"version":3,"file":"effector-react.es.js","sources":["node_modules/effector-react/createComponent.js","node_modules/effector-react/createStoreConsumer.js","node_modules/effector-react/createStoreProvider.js","node_modules/effector-react/createContextComponent.js","node_modules/effector-react/useStore.js","node_modules/effector-react/createReactState.js","node_modules/effector-react/connect.js","node_modules/effector-react/createGate.js"],"sourcesContent":["//@flow\n\nimport * as React from 'react'\nimport {type Store, is, createStoreObject, createEvent} from 'effector'\nimport type {StoreView} from './index.h'\n\ntype Unsubscribe = () => void\n\nexport function createComponent<Props: {}, State>(\n  shape:\n    | Store<State>\n    | {+[key: string]: Store<any> | any}\n    | ((props: Props) => Store<State>),\n  renderProp: (props: Props, state: State) => React.Node,\n): StoreView<State, Props> {\n  let storeFn: (props: Props) => Store<any>\n  let store: Store<any>\n  if (is.store(shape)) {\n    store = (shape: any)\n  } else if (typeof shape === 'function') {\n    storeFn = shape\n  } else {\n    if (typeof shape === 'object' && shape !== null) {\n      store = createStoreObject(shape)\n    } else throw Error('shape should be a store or object with stores')\n  }\n  const storeName = store?.shortName ?? 'Unknown'\n  const mounted = createEvent(`${storeName}.View mounted`)\n  const unmounted = createEvent(`${storeName}.View unmounted`)\n  return class RenderComponent extends React.Component<\n    Props,\n    {currentState: State},\n  > {\n    static displayName = `${storeName}.View`\n    static mounted = mounted\n    static unmounted = unmounted\n    _unsubscribe: Unsubscribe | null = null\n    _hasUnmounted: boolean = false\n    store = typeof shape === 'function' ? storeFn(this.props) : store\n    state = {currentState: this.store.getState()}\n    componentDidMount() {\n      mounted({props: this.props, state: this.store.getState()})\n      this.subscribe()\n    }\n    componentWillUnmount() {\n      unmounted({props: this.props, state: this.store.getState()})\n      this.unsubscribe()\n      this._hasUnmounted = true\n    }\n    render() {\n      return renderProp(this.props, this.state.currentState)\n    }\n    subscribe() {\n      this._unsubscribe = this.store.watch((state: State) => {\n        if (this._hasUnmounted) {\n          return\n        }\n\n        this.setState(prevState => {\n          if (state === prevState.currentState) {\n            return null\n          }\n          return {currentState: state}\n        })\n      })\n    }\n    unsubscribe() {\n      if (typeof this._unsubscribe === 'function') {\n        this._unsubscribe()\n      }\n\n      this._unsubscribe = null\n    }\n  }\n}\n","//@flow\n\nimport * as React from 'react'\n\nimport type {Store} from 'effector'\n\nimport type {StoreConsumer} from './index.h'\nimport {createComponent} from './createComponent'\n\nexport function createStoreConsumer<State>(\n  store: Store<State>,\n): StoreConsumer<State> {\n  return createComponent(store, ({children}, state) => children(state))\n}\n","//@flow\n\nimport * as React from 'react'\n\nimport type {Store} from 'effector'\n\nimport type {StoreProvider} from './index.h'\n\nexport function unstable_createStoreProvider<State>(\n  store: Store<State>,\n): StoreProvider<State> {\n  return class StoreProvider extends React.Component<\n    {\n      value: State,\n      children: React.Node,\n      ...\n    },\n    {|+currentValue: React.Node|},\n  > {\n    static displayName = `${store.shortName}.Provider`\n    static defaultProps = {\n      children: null,\n    }\n    state = {\n      currentValue: null,\n    }\n    static getDerivedStateFromProps(props) {\n      //$off\n      store.setState(props.value)\n      return {\n        currentValue: props.value,\n      }\n    }\n    render() {\n      return this.props.children\n    }\n  }\n}\n","//@flow\n\nimport * as React from 'react'\nimport type {Store} from 'effector'\nimport {createStoreConsumer} from './createStoreConsumer'\n\nexport function createContextComponent<Props: {}, State, Context>(\n  store: Store<State>,\n  context: React.Context<Context>,\n  renderProp: (props: Props, state: State, context: Context) => React.Node,\n): React.ComponentType<Props> {\n  const Consumer = createStoreConsumer(store)\n  return class RenderComponent extends React.Component<Props> {\n    static contextType = context\n    renderProp = (state: State) => renderProp(this.props, state, this.context)\n    render() {\n      return <Consumer>{this.renderProp}</Consumer>\n    }\n  }\n}\n","//@flow\n\nimport {type Store, is, clearNode, createStore} from 'effector'\nimport {useEffect, useLayoutEffect, useReducer, useMemo} from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nconst stateReducer = (_: any, payload: any) => payload\n\nexport function useStore<State>(store: Store<State>): State {\n  if (!is.store(store)) throw Error('expect useStore argument to be a store')\n  const dispatch = useReducer(stateReducer, undefined, store.getState)[1]\n  useIsomorphicLayoutEffect(() => store.watch(dispatch), [store])\n  return store.getState()\n}\n\nexport function useStoreMap<State, Result, Keys: $ReadOnlyArray<any>>({\n  store,\n  keys,\n  fn,\n}: {|\n  +store: Store<State>,\n  +keys: Keys,\n  fn(state: State, keys: Keys): Result,\n|}): Result {\n  if (!is.store(store)) throw Error('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throw Error('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throw Error('useStoreMap expects a function')\n  const result: Store<Result> = useMemo(\n    () =>\n      createStore(fn(store.getState(), keys)).on(store, (_, state) =>\n        fn(state, keys),\n      ),\n    keys,\n  )\n  const state = useStore(result)\n  useIsomorphicLayoutEffect(\n    () => () => {\n      result.off(store)\n      clearNode(result, {deep: true})\n    },\n    keys,\n  )\n  return state\n}\n","//@flow\n\nimport * as React from 'react'\nimport {createStoreConsumer} from './createStoreConsumer'\n\nimport type {Store} from 'effector'\n\nexport function createReactState<State: Object, Com: React.ComponentType<*>>(\n  store: Store<State>,\n  Component: Com,\n): React.ComponentType<$Exact<$Diff<React.ElementConfig<Com>, State>>> {\n  const Store = createStoreConsumer(store)\n  const ConnectedComponent = props => (\n    <Store>{state => <Component {...props} {...state} />}</Store>\n  )\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  ConnectedComponent.displayName = `Connect(${wrappedComponentName})`\n  return ConnectedComponent\n}\n","//@flow\n\nimport * as React from 'react'\n\nimport type {Store} from 'effector'\nimport {createReactState} from './createReactState'\n\nexport function connect<State: Object, Com: React.ComponentType<*>>(\n  Component: Com,\n): (\n  store: Store<State>,\n) => React.ComponentType<$Exact<$Diff<React.ElementConfig<Com>, State>>> {\n  return store => createReactState(store, Component)\n}\n","//@flow\n\nimport * as React from 'react'\nimport {useEffect} from 'react'\nimport {createDomain, createApi, type Store, type Event} from 'effector'\n\nconst {store: createStore} = createDomain('Gate')\n\nexport type Gate<Props = {||}> = Class<React.Component<Props>> &\n  interface {\n    isOpen: boolean,\n    isTerminated: boolean,\n    open: Event<void>,\n    close: Event<void>,\n    status: Store<boolean>,\n    destructor: Event<void>,\n    current: Props,\n    state: Store<Props>,\n    set: Event<Props>,\n    childGate<Next>(childName?: string): Gate<Next>,\n  }\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props?: Props = ({}: any),\n) {\n  useEffect(() => {\n    GateComponent.open()\n    return () => GateComponent.close()\n  }, [GateComponent])\n  GateComponent.set(props)\n}\n\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = ({}: any),\n): Gate<Props> {\n  const status = createStore(false)\n  const state: Store<Props> = createStore(defaultState)\n  const {set} = createApi(state, {\n    set: (_, state) => state,\n  })\n\n  const {open, close, destructor} = createApi(status, {\n    open: () => GateComponent.predicate() && true,\n    close: () => false,\n    destructor: () => false,\n  })\n\n  class GateComponent extends React.PureComponent<Props> {\n    static predicate = () => true\n\n    static displayName = `Gate:${name}`\n    static isOpen = false\n    static current = state.getState()\n    static open = open\n    static close = close\n    static status = status\n    static state = state\n    static set = set\n    static destructor = destructor\n    static isTerminated = false\n    static childGate<Next>(childName: string = 'Subgate'): Gate<Next> {\n      const gate = createGate(`${name}/${childName}`)\n      ;(gate: any).predicate = () => GateComponent.status.getState()\n      let isOpen = false\n      let isFeedback = false\n      gate.open.watch(() => {\n        if (!isFeedback) isOpen = true\n      })\n      gate.close.watch(() => {\n        if (!isFeedback) isOpen = false\n      })\n\n      GateComponent.status.watch(status => {\n        isFeedback = true\n        if (isOpen && status && !gate.status.getState()) {\n          gate.open()\n        }\n        isFeedback = false\n      })\n      GateComponent.close.watch(() => {\n        isFeedback = true\n        gate.close()\n        isFeedback = false\n      })\n      GateComponent.destructor.watch(() => gate.destructor())\n      return gate\n    }\n\n    componentDidMount() {\n      GateComponent.open()\n    }\n    componentWillUnmount() {\n      GateComponent.close()\n    }\n    render() {\n      GateComponent.set(this.props)\n      return null\n    }\n  }\n  const unwatch = status.watch(status => (GateComponent.isOpen = status))\n  const unwatch2 = state.watch(current => (GateComponent.current = current))\n  const unwatch3 = status.map(status => {\n    if (!status) GateComponent.current = defaultState\n  })\n  state.reset(close)\n\n  const setTerminated = destructor.watch(() => {\n    GateComponent.isTerminated = true\n  })\n  const unstate = () => {\n    GateComponent.status.off(GateComponent.open)\n    GateComponent.status.off(GateComponent.close)\n    GateComponent.status.off(GateComponent.destructor)\n  }\n\n  const undestruct = destructor.watch(() => {\n    undestruct()\n    unwatch()\n    unwatch2()\n    setTerminated()\n    unstate()\n    GateComponent.state.off(GateComponent.set)\n  })\n  return GateComponent\n}\n"],"names":["createComponent","shape","renderProp","storeFn","store","is","Error","createStoreObject","storeName","_store","shortName","mounted","createEvent","unmounted","React","_unsubscribe","_hasUnmounted","this","props","state","currentState","getState","componentDidMount","subscribe","componentWillUnmount","unsubscribe","render","watch","setState","prevState","displayName","createStoreConsumer","children","unstable_createStoreProvider","currentValue","value","defaultProps","createContextComponent","context","Consumer","React.createElement","contextType","useStore","dispatch","useReducer","stateReducer","undefined","useIsomorphicLayoutEffect","useStoreMap","keys","fn","Array","isArray","result","useMemo","createStore","on","_","off","clearNode","deep","createReactState","Component","Store","ConnectedComponent","name","connect","useGate","GateComponent","useEffect","open","close","set","createGate","defaultState","status","createApi","destructor","predicate","childName","gate","isOpen","isFeedback","current","isTerminated","unwatch","unwatch2","map","reset","setTerminated","undestruct","window","useLayoutEffect","payload","createDomain"],"mappings":"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"}